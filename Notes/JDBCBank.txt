Bank Assignment
Console application: 
 
-- GUI STUFF
A registered user can login with their username and password
An unregistered user can register by creating a username and password 

XXX A superuser can view, create, update, and delete all users.
-- this is done using a single super user and getting the credentials
-- from a properties file

A user can view their own existing accounts and balances.
A user can create an account.
A user can delete an account if it is empty.
A user can add to or withdraw from an account.
A user can execute multiple deposits or withdrawals in a session.
A user can logout.

XXX Use sequences to generate USER_ID and BANK_ACCOUNT_ID.
Throw custom exceptions in the event of user error (overdraft, incorrect password, etc). 
Provide validation messages through the console for all user actions. 
Use the DAO design pattern. 
Store superuser username/password and database connection information in a properties file. 

Required technologies:  
XXX PL/SQL with at least one stored procedure
XXX JDBC with prepared and callable statements
Scanner for user input, JUnit tests on as much of the program as possible.

Bonus:
A user's transactions are recorded.
A user may view transaction history. 

XXX Create a Maven project with your solution as JDBCBank, include it in your repository with your DB creation script (JDBCBank.sql). 

Presentations: Friday, Sept. 20
